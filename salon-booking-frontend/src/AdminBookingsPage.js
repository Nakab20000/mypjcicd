import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./AdminPage.css"; // ‡πÉ‡∏ä‡πâ CSS ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
import HeaderAdmin from "./HeaderAdmin";

const AdminBookingsPage = () => {
    const navigate = useNavigate();
    const [bookings, setBookings] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const role = localStorage.getItem("role");
        if (role !== "admin") {
            navigate("/login");
        } else {
            fetchBookings(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        }
    }, [navigate]);

    // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏à‡∏≤‡∏Å API
    const fetchBookings = async () => {
        try {
            const accessToken = localStorage.getItem("accessToken");
            
            if (!accessToken) {
                alert("Session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
                navigate("/login"); // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Login
                return;
            }
    
            const response = await fetch("http://127.0.0.1:8000/api/bookings/", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${accessToken}`, // ‚úÖ ‡πÉ‡∏™‡πà Token
                },
            });
    
            if (response.status === 401) {
                alert("Session ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á!");
                localStorage.removeItem("accessToken"); // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå token
                navigate("/login"); // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
                return;
            }
    
            if (!response.ok) {
                throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ");
            }
    
            const data = await response.json();
            setBookings(data);
        } catch (error) {
            console.error("Error fetching bookings:", error);
            setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
        } finally {
            setLoading(false);
        }
    };
    

    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
    const handleUpdateBookingStatus = async (bookingId, newStatus) => {
        try {
            const accessToken = localStorage.getItem("accessToken");
            const response = await fetch(`http://127.0.0.1:8000/api/booking/update-status/${bookingId}/`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${accessToken}`,
                },
                body: JSON.stringify({ status: newStatus }),
            });

            if (!response.ok) {
                throw new Error("Failed to update booking status.");
            }

            alert(`‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô ${newStatus} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`);
            fetchBookings(); // ‚úÖ ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        } catch (error) {
            alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
        }
    };

    if (loading) return <p>‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;
    if (error) return <p style={{ color: "red" }}>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</p>;

    return (
        <div className="admin-page">
            <HeaderAdmin />

            <div className="content">
                <h2>üìÖ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h2>
                <table className="booking-table">
                    <thead>
                        <tr>
                            <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                            <th>‡πÄ‡∏ß‡∏•‡∏≤</th>
                            <th>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                            <th>‡∏ó‡∏£‡∏á‡∏ú‡∏°</th>
                            <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                            <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                        </tr>
                    </thead>
                    <tbody>
                        {bookings.map((booking) => (
                            <tr key={booking.booking_id}>
                                <td>{booking.booking_date}</td>
                                <td>{booking.booking_time}</td>
                                <td>{booking.user.username}</td>
                                <td>{booking.hair_style}</td>
                                <td className={`status-${booking.status}`}>{booking.status}</td>
                                <td>
                                    {booking.status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" && (
                                        <>
                                            <button
                                                className="approve-btn"
                                                onClick={() => handleUpdateBookingStatus(booking.booking_id, "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥")}
                                            >
                                                ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                                            </button>
                                            <button
                                                className="cancel-btn"
                                                onClick={() => handleUpdateBookingStatus(booking.booking_id, "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")}
                                            >
                                                ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                                            </button>
                                        </>
                                    )}
                                </td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
        </div>
    );
};

export default AdminBookingsPage;
