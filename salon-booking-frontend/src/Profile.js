import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./Profile.css";

const Profile = () => {
    const navigate = useNavigate();
    const [noShowCount, setNoShowCount] = useState(0);
    const [profileImageUrl, setProfileImageUrl] = useState("");

    useEffect(() => {
        fetchProfileData();
        fetchNoShowCount();
    }, []);

    const fetchProfileData = async () => {
        try {
            const accessToken = localStorage.getItem("accessToken");
            const response = await fetch("http://127.0.0.1:8000/api/profile/", {
                headers: {
                    Authorization: `Bearer ${accessToken}`,
                },
            });

            if (!response.ok) {
                console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ:", response.status, response.statusText);
                return;
            }

            const data = await response.json();
            console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", data);

            if (data.profile_image) {
                const imageUrl = data.profile_image.startsWith("http")
                    ? data.profile_image
                    : `http://127.0.0.1:8000${data.profile_image}`;

                console.log("‚úÖ URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:", imageUrl);
                setProfileImageUrl(imageUrl);
            } else {
                console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå, ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏ó‡∏ô");
                setProfileImageUrl("/default-profile.png");
            }
        } catch (error) {
            console.error("‚ùå Error fetching profile data:", error);
        }
    };

    const fetchNoShowCount = async () => {
        try {
            const accessToken = localStorage.getItem("accessToken");
            const response = await fetch("http://127.0.0.1:8000/api/member/no-show-count/", {
                headers: {
                    Authorization: `Bearer ${accessToken}`,
                },
            });

            if (!response.ok) throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• No-Show ‡πÑ‡∏î‡πâ");

            const data = await response.json();
            console.log("‚úÖ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô No-Show ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", data.count);
            setNoShowCount(data.count);
        } catch (error) {
            console.error("‚ùå Error fetching no-show count:", error);
        }
    };

    const handleViewNoShowDetails = () => {
        navigate("/main/my-no-show");
    };

    const handleLogout = () => {
        localStorage.removeItem("accessToken");
        localStorage.removeItem("refreshToken");
        navigate("/");
    };

    const handleEditProfile = () => {
        navigate("/edit-profile");
    };

    const handleViewBookings = () => {
        navigate("/member-bookings");
    };

    const handleViewMyReviews = () => {
        navigate("/my-reviews");
    };

    const handleBack = () => {
        navigate("/main");
    };

    return (
        <div className="profile-container1">
            <div className="profile-card1">
                <div className="profile-icon1">
                    <img src={profileImageUrl} alt="Profile" className="icon1" onError={() => console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ:", profileImageUrl)} />
                </div>

                <div className="no-show-section1">
                    <p className="no-show-text1">
                        ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏ï‡∏≤‡∏°‡∏Ñ‡∏¥‡∏ß: <span className="no-show-count1">{noShowCount}</span> ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
                    </p>
                    <button className="no-show-btn1" onClick={handleViewNoShowDetails}>
                        ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                    </button>
                </div>

                <h2>üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</h2>

                <button className="profile-button1" onClick={handleEditProfile}>
                    ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
                </button>

                <button className="profile-button1" onClick={handleViewBookings}>
                    üìÖ ‡∏î‡∏π‡∏Ñ‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
                </button>

                <button className="profile-button1" onClick={handleViewMyReviews}>
                    ‚≠ê ‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô
                </button>

                <button className="logout-button1" onClick={handleLogout}>
                    üö™ ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
                </button>

                <button className="back-button1" onClick={handleBack}>
                    üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
                </button>
            </div>
        </div>
    );
};

export default Profile;
