
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  backend:
    build: ./salon_booking
    volumes:
      - ./salon_booking:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_HOST: db
      DATABASE_NAME: ${POSTGRES_DB}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        while ! nc -z db 5432; do sleep 1; done &&
        echo 'Database is up!' &&
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.filter(username='salon_user').exists() or User.objects.create_user(email='user@example.com', username='salon_user', password='1234'); User.objects.filter(username='admin_user').exists() or User.objects.create_superuser(email='admin@example.com', username='admin_user', password='1234')\" &&
        gunicorn salon_booking.wsgi:application --bind 0.0.0.0:8000 --workers 3
      "

  frontend:
    build: ./salon-booking-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  db_data:
